import React, { useState } from 'react';
import Subheader from '../components/Subheader';
import { Box, Grid, TextField, FormControl, InputLabel, MenuItem, Select, Button, Modal, Fade, Checkbox, Typography, Backdrop } from '@mui/material';
import VisibilityIcon from '@mui/icons-material/Visibility';


import Table from '../components/Table'
import { useLocation, useNavigate } from 'react-router-dom';

function DebtFollowUp() {
    const [selectedValue, setSelectedValue] = useState('');
    const navigate = useNavigate();
    const handleClick = (row) => {
        console.log('Selected Row:', row);
        navigate('/Fromnotify');
    };
    const style = {
        position: 'absolute',
        top: '50%',
        left: '50%',
        transform: 'translate(-50%, -50%)',
        width: 400,
        bgcolor: 'background.paper',
        border: '2px solid #000',
        boxShadow: 24,
        p: 4,
    };

    const handleChange = (event) => {
        setSelectedValue(event.target.value);
    };



    const handleTableClick = (row) => {
        console.log('Selected Row:', row);
        navigate('/detailEmployer', {
            state: {
                id: row.id,
                // name: row.name,
                // codeID: row.codeID,
                // tel: row.tel,
                // email: row.email,
                // status: row.status,
                // nCompany: row.nCompany,
                // quantity: row.quantity
            }
        });
    };


    const [open, setOpen] = React.useState(false);
    const handleOpen = () => setOpen(true);
    const handleClose = () => setOpen(false);

    const columns = [
        { header: '', field: 'Checkbox' }, // ‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Checkbox
        { header: '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á', field: 'Risk' },
        { header: '‡∏£‡∏´‡∏±‡∏™‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô', field: 'codeID' },
        { header: '‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•', field: 'name' },
        { header: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏á‡∏≤‡∏ô', field: 'status' },
        { header: '‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ', field: 'AccountNumber' },
        { header: '‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ', field: 'BorrowerGroup' },
        { header: '‡∏á‡∏ß‡∏î‡∏ä‡∏≥‡∏£‡∏∞', field: 'Installment' },
        { header: '‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô', field: 'Level' },
        { header: '‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡∏µ‡πâ', field: 'DebtFollowUp' },
        { header: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡∏µ‡πâ', field: 'DebtFollowUpDate' },
        {
            header: '‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£',
            render: (_, row) => (
              <button style={{
                width: '40px',
                height: '40px',
                borderRadius: '50%',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                backgroundColor: '#f0f0f0',
                border: 'none',
                cursor: 'pointer',
              }} ><VisibilityIcon fontSize="small" /></button>),
          }

    ];

    const rows = [
        {
            id: '1',
            Checkbox: <Checkbox />, // ‡πÄ‡∏û‡∏¥‡πà‡∏° Checkbox ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
            Risk: 'üî¥',
            codeID: 'x-xxxx-xxxx-x-x',
            name: '‡∏™‡∏∏‡∏†‡∏≤‡∏ß‡∏î‡∏µ ‡∏™‡∏ß‡∏¢‡∏î‡∏µ',
            status: '‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ú‡∏¥‡∏î‡∏ô‡∏±‡∏î‡∏ä‡∏≥‡∏£‡∏∞',
            AccountNumber: '00-000-000-00',
            BorrowerGroup: '‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡∏¢‡∏∑‡∏°‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥',
            Installment: '‡∏£‡∏≤‡∏¢‡∏õ‡∏µ',
            Level: 'A4',
            DebtFollowUp: 'Promise to pay',
            DebtFollowUpDate: '21/09/2564'
        },
        {
            id: '2',
            Checkbox: <Checkbox />,
            Risk: 'üî¥',
            codeID: 'x-xxxx-xxxx-x-x',
            name: '‡∏™‡∏∏‡∏†‡∏≤‡∏ß‡∏î‡∏µ ‡∏™‡∏ß‡∏¢‡∏î‡∏µ',
            status: '‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ú‡∏¥‡∏î‡∏ô‡∏±‡∏î‡∏ä‡∏≥‡∏£‡∏∞',
            AccountNumber: '00-000-000-00',
            BorrowerGroup: '‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡∏¢‡∏∑‡∏°‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥',
            Installment: '‡∏£‡∏≤‡∏¢‡∏õ‡∏µ',
            Level: 'A4',
            DebtFollowUp: 'Promise to pay',
            DebtFollowUpDate: '21/09/2564'
        },
        {
            id: '3',
            Checkbox: <Checkbox />,
            Risk: 'üî¥',
            codeID: 'x-xxxx-xxxx-x-x',
            name: '‡∏™‡∏∏‡∏†‡∏≤‡∏ß‡∏î‡∏µ ‡∏™‡∏ß‡∏¢‡∏î‡∏µ',
            status: '‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ú‡∏¥‡∏î‡∏ô‡∏±‡∏î‡∏ä‡∏≥‡∏£‡∏∞',
            AccountNumber: '00-000-000-00',
            BorrowerGroup: '‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡∏¢‡∏∑‡∏°‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥',
            Installment: '‡∏£‡∏≤‡∏¢‡∏õ‡∏µ',
            Level: 'A4',
            DebtFollowUp: 'Promise to pay',
            DebtFollowUpDate: '21/09/2564'
        },
        {
            id: '4',
            Checkbox: <Checkbox />,
            Risk: 'üü°',
            codeID: 'x-xxxx-xxxx-x-x',
            name: '‡∏™‡∏∏‡∏†‡∏≤‡∏ß‡∏î‡∏µ ‡∏™‡∏ß‡∏¢‡∏î‡∏µ',
            status: '‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ú‡∏¥‡∏î‡∏ô‡∏±‡∏î‡∏ä‡∏≥‡∏£‡∏∞',
            AccountNumber: '00-000-000-00',
            BorrowerGroup: '‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡∏¢‡∏∑‡∏°‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥',
            Installment: '‡∏£‡∏≤‡∏¢‡∏õ‡∏µ',
            Level: 'A4',
            DebtFollowUp: 'Promise to pay',
            DebtFollowUpDate: '21/09/2564'
        },
    ];
    return (
        <>
            <Box sx={{ position: 'fixed', top: 0, width: '100%', zIndex: 10, backgroundColor: '#fff' }}>
                <Subheader textHeader='‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡∏µ‡πâ' />
            </Box>
            <Box style={{ marginTop: '50px' }}>
                <Box sx={{ width: '80%', right: 0, margin: 'auto', }} textAlign='end' >

                    <Grid container md={12} spacing={3} sx={{ margin: '0 auto', right: '0' }}>
                        <Grid item md={3}>

                            <TextField
                                id="outlined"
                                label="‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ / ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ"
                                defaultValue=""
                                size='small'
                                sx={{ fontSize: '16px' }}
                                fullWidth
                            />
                        </Grid>
                        <Grid item md={3}>

                            <TextField
                                id="outlined"
                                label="‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô"
                                defaultValue=""
                                size='small'
                                sx={{ fontSize: '16px' }}
                                fullWidth
                            />
                        </Grid>
                        <Grid item md={3}>

                            <TextField
                                id="outlined"
                                label="‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ"
                                defaultValue=""
                                size='small'
                                sx={{ fontSize: '16px' }}
                                fullWidth
                            />
                        </Grid>
                        <Grid item md={3}>
                            <FormControl fullWidth >
                                <InputLabel id="dropdown-label" style={{ marginTop: '-7px' }} textAlign='start'>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ</InputLabel>
                                <Select
                                    labelId="dropdown-label"
                                    id="dropdown"
                                    value={selectedValue}
                                    onChange={handleChange}
                                    label="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞"
                                    size='small'
                                >
                                    <MenuItem value={1}>‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏≥‡∏£‡∏∞</MenuItem>
                                    <MenuItem value={2}>‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡πÑ‡∏Å‡πà‡∏•‡πÄ‡∏Å‡∏•‡∏µ‡πà‡∏¢</MenuItem>
                                    <MenuItem value={3}>‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£</MenuItem>
                                    <MenuItem value={4}>‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï</MenuItem>
                                    <MenuItem value={4}>‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡∏û‡∏¥‡∏Å‡∏≤‡∏£</MenuItem>

                                </Select>
                            </FormControl>
                        </Grid>

                    </Grid>
                </Box>

                {/* </Grid> */}
                <Box m={5}>
                    <Table columns={columns} rows={rows} />
                </Box>

                <Box sx={{ margin: 5, textAlign: "right" }}>

                    <Button onClick={handleOpen} variant="contained" color="error" size="large">
                        ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                    </Button>
                </Box>
            </Box>

            <Modal
                aria-labelledby="transition-modal-title"
                aria-describedby="transition-modal-description"
                open={open}
                onClose={handleClose}
                closeAfterTransition
                slots={{ backdrop: Backdrop }}
                slotProps={{
                    backdrop: {
                        timeout: 500,
                    },
                }}
            >
                <Fade in={open}>
                    <Box sx={style}>
                        <Typography id="transition-modal-title" variant="h6" component="h2">
                            ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡∏µ‡πâ
                        </Typography>
                        <FormControl fullWidth >
                                <InputLabel id="dropdown-label" style={{ marginTop: '-7px' }} textAlign='start'>‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡∏µ‡πâ</InputLabel>
                                <Select
                                    labelId="dropdown-label"
                                    id="dropdown"
                                    value={selectedValue}
                                    onChange={handleChange}
                                    label="‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡∏µ‡πâ"
                                    size='small'
                                >
                                    <MenuItem value={1}>‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà 1 (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡∏ó‡∏µ‡πà‡∏ú‡∏¥‡∏î‡∏ô‡∏±‡∏î‡∏ä‡∏≥‡∏£‡∏∞)</MenuItem>
                                   

                                </Select>
                            </FormControl>

                        <Grid container md={12}>
                            <Grid item md={6}>

                                <Typography id="transition-modal-description" sx={{ mt: 2 }}>
                                    <Checkbox />   SMS
                                </Typography>
                            </Grid>
                            <Grid item md={6}>

                                <Typography id="transition-modal-description" sx={{ mt: 2 }}>
                                    <Checkbox />   E-mail
                                </Typography>
                            </Grid>
                            <Grid item md={6}>

                                <Typography id="transition-modal-description" sx={{ mt: 2 }}>
                                    <Checkbox />   ‡πÇ‡∏ó‡∏£
                                </Typography>
                            </Grid>
                            <Grid item md={6}>

                                <Typography id="transition-modal-description" sx={{ mt: 2 }}>
                                    <Checkbox />   ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                                </Typography>
                            </Grid>
                        </Grid>
                        <Box sx={{ mt: 3, display: 'flex', justifyContent: 'center', gap: 2 }}>
                            <Button variant="contained" color="success" onClick={handleClose}>
                                ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡∏µ‡πâ‡∏ï‡∏≤‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
                            </Button>
                            <Button variant="contained" onClick={handleClick}>
                                ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏≠‡∏á
                            </Button>
                        </Box>
                    </Box>

                </Fade>
            </Modal>

        </>
    );
}

export default DebtFollowUp;
